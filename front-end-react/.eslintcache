[{"D:\\dev\\Spring_projects\\task-manager\\front-end-react\\src\\index.js":"1","D:\\dev\\Spring_projects\\task-manager\\front-end-react\\src\\App.js":"2","D:\\dev\\Spring_projects\\task-manager\\front-end-react\\src\\reportWebVitals.js":"3","D:\\dev\\Spring_projects\\task-manager\\front-end-react\\src\\components\\Dashboard.js":"4","D:\\dev\\Spring_projects\\task-manager\\front-end-react\\src\\components\\Project\\Projectitem.js":"5","D:\\dev\\Spring_projects\\task-manager\\front-end-react\\src\\components\\Layout\\Header.js":"6","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\index.js":"7","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\reportWebVitals.js":"8","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\App.js":"9","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Dashboard.js":"10","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Layout\\Header.js":"11","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Project\\Projectitem.js":"12","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Project\\CreateProjectButton.js":"13","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Project\\AddProject.js":"14","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\store.js":"15","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\reducers\\index.js":"16","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\reducers\\errorReducer.js":"17","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\actions\\types.js":"18","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\actions\\projectActions.js":"19","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\reducers\\projectReducer.js":"20","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Project\\updateProject.js":"21","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Project\\UpdateProject.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":326,"mtime":1608964566000,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":2451,"mtime":1608965476000,"results":"27","hashOfConfig":"24"},{"size":172,"mtime":1608951258000,"results":"28","hashOfConfig":"24"},{"size":1409,"mtime":1608965284000,"results":"29","hashOfConfig":"24"},{"size":500,"mtime":499162500000,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":1037,"mtime":1610219018000,"results":"33","hashOfConfig":"31"},{"size":1403,"mtime":1609792322000,"results":"34","hashOfConfig":"31"},{"size":1396,"mtime":1610217522000,"results":"35","hashOfConfig":"31"},{"size":1682,"mtime":1610216902000,"results":"36","hashOfConfig":"31"},{"size":325,"mtime":1609195196000,"results":"37","hashOfConfig":"31"},{"size":5387,"mtime":1609749258000,"results":"38","hashOfConfig":"31"},{"size":634,"mtime":1609387884000,"results":"39","hashOfConfig":"31"},{"size":230,"mtime":1609786958000,"results":"40","hashOfConfig":"31"},{"size":278,"mtime":1609408408000,"results":"41","hashOfConfig":"31"},{"size":127,"mtime":1610207308000,"results":"42","hashOfConfig":"31"},{"size":882,"mtime":1610210456000,"results":"43","hashOfConfig":"31"},{"size":540,"mtime":1610209960000,"results":"44","hashOfConfig":"31"},{"size":3309,"mtime":1610219012000,"results":"45","hashOfConfig":"31"},{"size":4407,"mtime":1610327340000,"results":"46","hashOfConfig":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"woadz",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"11je9o3",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\dev\\Spring_projects\\task-manager\\front-end-react\\src\\index.js",[],["103","104"],"D:\\dev\\Spring_projects\\task-manager\\front-end-react\\src\\App.js",["105"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\dev\\Spring_projects\\task-manager\\front-end-react\\src\\reportWebVitals.js",[],"D:\\dev\\Spring_projects\\task-manager\\front-end-react\\src\\components\\Dashboard.js",["106","107","108","109"],"D:\\dev\\Spring_projects\\task-manager\\front-end-react\\src\\components\\Project\\Projectitem.js",[],"D:\\dev\\Spring_projects\\task-manager\\front-end-react\\src\\components\\Layout\\Header.js",[],"D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\index.js",[],["110","111"],"D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\reportWebVitals.js",[],"D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\App.js",["112"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { Component } from \"react\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />{\" \"}\n            <Route exact path=\"/addProject\" component={AddProject} />{\" \"}\n            <Route exact path=\"/updateProject/:id\" component={UpdateProject} />{\" \"}\n          </div>{\" \"}\n        </Router>{\" \"}\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Dashboard.js",["113"],"import React, { Component } from \"react\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport Projectitem from \"./Project/Projectitem\";\r\nimport Projectbutton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\"> Projects </h1> <br />\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Projectbutton />\r\n              </div>\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <Projectitem key={project.id} project={project} />\r\n              ))}\r\n            </div>{\" \"}\r\n          </div>{\" \"}\r\n        </div>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Layout\\Header.js",[],"D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Project\\Projectitem.js",["114"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Projectitem extends Component {\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\"> {project.projectIdentifier} </span>{\" \"}\r\n            </div>{\" \"}\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3> {project.projectName} </h3> <p> {project.description} </p>{\" \"}\r\n            </div>{\" \"}\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                {\r\n                  // <a href=\"#\">\r\n                  //   <li className=\"list-group-item board\">\r\n                  //     <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>{\" \"}\r\n                  //   </li>{\" \"}\r\n                  // </a>{\" \"}\r\n                }\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info </i>{\" \"}\r\n                  </li>{\" \"}\r\n                </Link>{\" \"}\r\n                <a href=\"\">\r\n                  <li className=\"list-group-item delete\">\r\n                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project </i>{\" \"}\r\n                  </li>{\" \"}\r\n                </a>{\" \"}\r\n              </ul>{\" \"}\r\n            </div>{\" \"}\r\n          </div>{\" \"}\r\n        </div>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Projectitem;\r\n","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Project\\CreateProjectButton.js",[],"D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Project\\AddProject.js",["115"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChangeProjectName(e) {\r\n    this.setState({\r\n      projectName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeProjectIdentifier(e) {\r\n    this.setState({\r\n      projectIdentifier: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeStart_Date(e) {\r\n    this.setState({ start_date: e.target.value });\r\n  }\r\n\r\n  onChangeEnd_Date(e) {\r\n    this.setState({\r\n      end_date: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">\r\n                Tell Us About Your Project!{\" \"}\r\n              </h5>{\" \"}\r\n              <hr />\r\n              <form\r\n                onSubmit={this.onSubmit}\r\n                onSubmit={this.onSubmit.bind(this)}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChangeProjectName.bind(this)}\r\n                  />{\" \"}\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>{\" \"}\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChangeProjectIdentifier.bind(this)}\r\n                  />{\" \"}\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>{\" \"}\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChangeDescription.bind(this)}\r\n                  ></textarea>{\" \"}\r\n                  {<div className=\"invalid-feedback\">{errors.description}</div>}\r\n                </div>{\" \"}\r\n                <h6> Start Date </h6>{\" \"}\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChangeStart_Date.bind(this)}\r\n                  />{\" \"}\r\n                </div>{\" \"}\r\n                <h6> Estimated End Date </h6>{\" \"}\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChangeEnd_Date.bind(this)}\r\n                  />{\" \"}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success btn-block mt-4\"\r\n                />\r\n              </form>{\" \"}\r\n            </div>{\" \"}\r\n          </div>{\" \"}\r\n        </div>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propType = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\store.js",[],"D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\reducers\\index.js",[],"D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\reducers\\errorReducer.js",["116"],"import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\actions\\types.js",[],"D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\actions\\projectActions.js",["117"],"import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async(dispatch) => {\r\n    try {\r\n        const res = await axios.post(\"http://localhost:8080/api/project\", project);\r\n        history.push(\"/dashboard\");\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data,\r\n        });\r\n    }\r\n};\r\nexport const getProjects = () => async(dispatch) => {\r\n    const res = await axios.get(\"http://localhost:8080/api/project/all\");\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data,\r\n    });\r\n};\r\n\r\nexport const getProject = (id, history) => async(dispatch) => {\r\n    const res = await axios.get(`http://localhost:8080/api/project/${id}`);\r\n    dispatch({\r\n        type: GET_PROJECT,\r\n        payload: res.data,\r\n    });\r\n};","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\reducers\\projectReducer.js",["118"],"import { GET_PROJECT, GET_PROJECTS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {},\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload,\r\n            };\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Project\\updateProject.js",["119","120"],"import React, { Component } from \"react\";\r\nimport { getProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: 2,\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {} = nextProps.project;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\"> Edit Project </h5> <hr />\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg \"\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                  />\r\n                </div>{\" \"}\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    disabled\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                  />\r\n                </div>{\" \"}\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                  ></textarea>{\" \"}\r\n                </div>{\" \"}\r\n                <h6> Start Date </h6>{\" \"}\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                  />\r\n                </div>{\" \"}\r\n                <h6> Estimated End Date </h6>{\" \"}\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>{\" \"}\r\n            </div>{\" \"}\r\n          </div>{\" \"}\r\n        </div>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n});\r\nexport default connect(mapStateToProps, { getProject })(UpdateProject);\r\n",["121","122"],"D:\\dev\\Spring_Projects\\task-manager\\front-end-react\\src\\components\\Project\\UpdateProject.js",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":12},{"ruleId":"128","severity":1,"message":"132","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":19},{"ruleId":"133","severity":1,"message":"134","line":32,"column":25,"nodeType":"135","endLine":32,"endColumn":37},{"ruleId":"133","severity":1,"message":"134","line":39,"column":25,"nodeType":"135","endLine":39,"endColumn":37},{"ruleId":"133","severity":1,"message":"134","line":44,"column":25,"nodeType":"135","endLine":44,"endColumn":36},{"ruleId":"124","replacedBy":"136"},{"ruleId":"126","replacedBy":"137"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":12},{"ruleId":"128","severity":1,"message":"138","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":31,"column":17,"nodeType":"135","endLine":31,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":81,"column":17,"nodeType":"141","endLine":81,"endColumn":52},{"ruleId":"142","severity":1,"message":"143","line":4,"column":1,"nodeType":"144","endLine":12,"endColumn":2},{"ruleId":"128","severity":1,"message":"145","line":6,"column":15,"nodeType":"130","messageId":"131","endLine":6,"endColumn":18},{"ruleId":"142","severity":1,"message":"143","line":8,"column":1,"nodeType":"144","endLine":23,"endColumn":2},{"ruleId":"128","severity":1,"message":"146","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":18},{"ruleId":"147","severity":1,"message":"148","line":20,"column":11,"nodeType":"149","messageId":"150","endLine":20,"endColumn":13},{"ruleId":"124","replacedBy":"151"},{"ruleId":"126","replacedBy":"152"},{"ruleId":"128","severity":1,"message":"146","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":18},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Projectitem' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["153"],["154"],"'CreateProjectButton' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'res' is assigned a value but never used.","'classnames' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["153"],["154"],"no-global-assign","no-unsafe-negation"]